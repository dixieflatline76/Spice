name: CI

on:
  push:
    branches-ignore: [ main ] 
  pull_request:
    branches: [ main ]
  release:
    types: [created]

permissions:
  contents: write

jobs:
  test-and-lint:
    runs-on: windows-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 'stable'

      - name: Cache Chocolatey packages
        uses: actions/cache@v3
        with:
          path: ~/AppData/Local/Chocolatey/lib
          key: ${{ runner.os }}-chocolatey-${{ hashFiles('**/tools.txt') }} 
          restore-keys: |
            ${{ runner.os }}-chocolatey-

      - name: Install GCC (if not cached)
        run: choco install mingw -y

      - name: Install make (if not cached)
        run: choco install make -y

      - name: Install Fyne dependencies
        run: go get fyne.io/fyne/v2/...

      - name: Install linters
        run: |
          go install golang.org/x/lint/golint@latest
          go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run linters
        run: |
          golint ./...
          staticcheck ./... 

      - name: Run tests
        run: go test ./...

  build:
    runs-on: windows-latest
    if: github.event_name == 'pull_request' || github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 'stable'

      - name: Cache Chocolatey packages
        uses: actions/cache@v3
        with:
          path: ~/AppData/Local/Chocolatey/lib
          key: ${{ runner.os }}-chocolatey-${{ hashFiles('**/tools.txt') }}
          restore-keys: |
            ${{ runner.os }}-chocolatey-

      - name: Install GCC (if not cached)
        run: choco install mingw -y

      - name: Install make (if not cached)
        run: choco install make -y

      - name: Update version.txt (if release)
        if: github.event_name == 'release'
        run: |
          echo ${{ github.event.release.tag_name }} > version.txt
          cat version.txt

      - name: Clean previous build artifacts
        run: make clean

      - name: Build Application
        run: make build-win-amd64  

      - name: Build Setup
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: Spice.iss
          options: /Q   

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: spice-release-build
          path: bin/
          
  release:
    runs-on: windows-latest
    needs: build 
    if: github.event_name == 'release'
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: spice-release-build

    - name: Calculate checksum and create.sha256 file
      run: |
        certutil -hashfile Spice.exe SHA256 | findstr /v ":" > Spice.exe.sha256
        certutil -hashfile Spice-Setup.exe SHA256 | findstr /v ":" > Spice-Setup.exe.sha256

    - name: Sign installer with Azure Trusted Signing
      uses: azure/trusted-signing-action@v0
      with:
        azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
        azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        endpoint: https://weu.codesigning.azure.net/
        trusted-signing-account-name: SpiceOSS
        certificate-profile-name: Spice
        files-folder: ${{ github.workspace }}
        files-folder-filter: exe
        file-digest: SHA256
        timestamp-rfc3161: http://timestamp.acs.microsoft.com
        timestamp-digest: SHA256

    - name: Upload binaries to release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          Spice.exe
          Spice.exe.sha256
          Spice-Setup.exe
          Spice-Setup.exe.sha256
