name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  setup-environment:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            base-devel
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-make
        env:
          GO_VERSION: 'stable'

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Add MSYS2 to PATH
        run: echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH

      - name: Install linters
        run: |
          go install golang.org/x/lint/golint@latest
          go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Install Fyne
        run: go get fyne.io/fyne/v2/...

      - name: Upload build environment
        uses: actions/upload-artifact@v3
        with:
          name: build-env
          path: C:\msys64
    
  test-and-lint:
    needs: setup-environment
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build environment
        uses: actions/download-artifact@v3
        with:
          name: build-env
          path: C:\msys64

      - name: Add MSYS2 to PATH
        run: echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH

      - name: Run linters
        run: |
          golint ./...
          staticcheck ./... 

      - name: Run tests
        run: go test ./...

  build-and-release:
    needs: test-and-lint
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build environment
        uses: actions/download-artifact@v3
        with:
          name: build-env
          path: C:\msys64

      - name: Add MSYS2 to PATH
        run: echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH

      - name: Build Application
        run: make build-gui

      - name: Create Release artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: spice-release-${{ github.ref_name }}
          path: bin/
